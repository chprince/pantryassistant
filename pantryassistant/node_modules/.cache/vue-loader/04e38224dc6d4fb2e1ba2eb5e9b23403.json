{"remainingRequest":"/Users/charlieprince/Sites/pantryassistant/pantryassistant/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/charlieprince/Sites/pantryassistant/pantryassistant/src/views/Home.vue?vue&type=template&id=17285d14","dependencies":[{"path":"/Users/charlieprince/Sites/pantryassistant/pantryassistant/src/views/Home.vue","mtime":1634290939447},{"path":"/Users/charlieprince/Sites/pantryassistant/pantryassistant/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charlieprince/Sites/pantryassistant/pantryassistant/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charlieprince/Sites/pantryassistant/pantryassistant/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/charlieprince/Sites/pantryassistant/pantryassistant/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1632349277000},{"path":"/Users/charlieprince/Sites/pantryassistant/pantryassistant/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charlieprince/Sites/pantryassistant/pantryassistant/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iaG9tZSI+CiAgICA8aDE+UGFudHJ5IEFzc2lzdGFudDwvaDE+CiAgICA8aDI+V2hhdCBkbyB5b3UgbmVlZCB0byB1c2UgdXA/PC9oMj4KICAgIDxwPk5vdGU6IHRoaXMgY3VycmVudGx5IHJldHVybnMgc3RhdGljIGRhdGEgdG8gc2F2ZSBteSBBUEkgcXVvdGFzPC9wPgogICAgPGlucHV0IHR5cGU9InRleHQiIHYtbW9kZWw9InZhbHVlIiBAY2hhbmdlPSJnZXRSZWNpcGVzKHZhbHVlKSIvPgogICAgPCEtLSB7e3N0YXRlLnJlY2lwZXN9fSAtLT4KICAgIDxhcnRpY2xlIHYtZm9yPSJyZWNpcGUgaW4gc3RhdGUucmVjaXBlcyIgOmtleT0icmVjaXBlIj4KICAgICAgPCEtLSB7e3JlY2lwZX19IC0tPgogICAgICA8aDM+e3sgcmVjaXBlLnRpdGxlIH19PC9oMz4KICAgICAgPGltZyA6c3JjPSJyZWNpcGUuaW1hZ2UiPgogICAgICA8aDQ+VGhpcyB3aWxsIHVzZSB1cCB7e3JlY2lwZS51c2VkSW5ncmVkaWVudENvdW50fX0gaW5ncmVkaWVudHM6PC9oND4KICAgICAgPHVsPgogICAgICAgIDxsaSB2LWZvcj0idXNlZEluZ3JlZGllbnQgaW4gcmVjaXBlLnVzZWRJbmdyZWRpZW50cyIgOmtleT0idXNlZEluZ3JlZGllbnQuaWQiPgogICAgICAgICAge3sgdXNlZEluZ3JlZGllbnQubmFtZSB9fQogICAgICAgIDwvbGk+CiAgICAgIDwvdWw+CiAgICAgIAogICAgICA8aDQ+WW91IG5lZWQgdG8gYnV5IHt7cmVjaXBlLm1pc3NlZEluZ3JlZGllbnRDb3VudH19IGluZ3JlZGllbnRzOjwvaDQ+CiAgICAgIDx1bD4KICAgICAgICA8bGkgdi1mb3I9Im1pc3NpbmdJbmdyZWRpZW50IGluIHJlY2lwZS5taXNzZWRJbmdyZWRpZW50cyIgOmtleT0ibWlzc2luZ0luZ3JlZGllbnQuaWQiPgogICAgICAgICAge3sgbWlzc2luZ0luZ3JlZGllbnQubmFtZSB9fQogICAgICAgIDwvbGk+CiAgICAgIDwvdWw+CgogICAgICA8cm91dGVyLWxpbmsgOnRvPSJ7IHBhdGg6ICcvcmVjaXBlLycrIHJlY2lwZS5pZCB9Ij5MaW5rPC9yb3V0ZXItbGluaz4KICAgIDwvYXJ0aWNsZT4KICA8L2Rpdj4K"},{"version":3,"sources":["/Users/charlieprince/Sites/pantryassistant/pantryassistant/src/views/Home.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpE,CAAC,CAAC,CAAC;QACD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC3E,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC;;MAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrE,CAAC,CAAC,CAAC;QACD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnF,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC;;MAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/charlieprince/Sites/pantryassistant/pantryassistant/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"home\">\n    <h1>Pantry Assistant</h1>\n    <h2>What do you need to use up?</h2>\n    <p>Note: this currently returns static data to save my API quotas</p>\n    <input type=\"text\" v-model=\"value\" @change=\"getRecipes(value)\"/>\n    <!-- {{state.recipes}} -->\n    <article v-for=\"recipe in state.recipes\" :key=\"recipe\">\n      <!-- {{recipe}} -->\n      <h3>{{ recipe.title }}</h3>\n      <img :src=\"recipe.image\">\n      <h4>This will use up {{recipe.usedIngredientCount}} ingredients:</h4>\n      <ul>\n        <li v-for=\"usedIngredient in recipe.usedIngredients\" :key=\"usedIngredient.id\">\n          {{ usedIngredient.name }}\n        </li>\n      </ul>\n      \n      <h4>You need to buy {{recipe.missedIngredientCount}} ingredients:</h4>\n      <ul>\n        <li v-for=\"missingIngredient in recipe.missedIngredients\" :key=\"missingIngredient.id\">\n          {{ missingIngredient.name }}\n        </li>\n      </ul>\n\n      <router-link :to=\"{ path: '/recipe/'+ recipe.id }\">Link</router-link>\n    </article>\n  </div>\n</template>\n\n<script>\n\n// VUE Composition API\nimport { reactive } from 'vue'\n// @ is an alias to /src\n\nexport default {\n  name: \"Home\",\n  components: {\n  },\n  setup() {\n\n    const state = reactive({\n      api_key: \"4afcbdd449da4a828e5ff1d2321c6eb8\",\n      url_base: \"https://api.spoonacular.com\",\n      query: \"\",\n      recipes: [],\n      testData: [ { \"id\": 640352, \"title\": \"Cranberry Apple Crisp\", \"image\": \"https://spoonacular.com/recipeImages/640352-312x231.jpg\", \"imageType\": \"jpg\", \"usedIngredientCount\": 1, \"missedIngredientCount\": 3, \"missedIngredients\": [ { \"id\": 9078, \"amount\": 2, \"unit\": \"cups\", \"unitLong\": \"cups\", \"unitShort\": \"cup\", \"aisle\": \"Produce\", \"name\": \"cranberries\", \"original\": \"2 cups fresh cranberries\", \"originalString\": \"2 cups fresh cranberries\", \"originalName\": \"fresh cranberries\", \"metaInformation\": [ \"fresh\" ], \"meta\": [ \"fresh\" ], \"extendedName\": \"fresh cranberries\", \"image\": \"https://spoonacular.com/cdn/ingredients_100x100/cranberries.jpg\" }, { \"id\": 1145, \"amount\": 4, \"unit\": \"Tbs\", \"unitLong\": \"Tbs\", \"unitShort\": \"Tbs\", \"aisle\": \"Milk, Eggs, Other Dairy\", \"name\": \"unsalted butter\", \"original\": \"1/2 stick (4 Tbs) unsalted butter, cut into cubes\", \"originalString\": \"1/2 stick (4 Tbs) unsalted butter, cut into cubes\", \"originalName\": \"1/2 stick unsalted butter, cut into cubes\", \"metaInformation\": [ \"unsalted\", \"cut into cubes\" ], \"meta\": [ \"unsalted\", \"cut into cubes\" ], \"image\": \"https://spoonacular.com/cdn/ingredients_100x100/butter-sliced.jpg\" }, { \"id\": 8120, \"amount\": 1.5, \"unit\": \"cups\", \"unitLong\": \"cups\", \"unitShort\": \"cup\", \"aisle\": \"Cereal\", \"name\": \"oats\", \"original\": \"1 1/2 cups regular oats (not quick-cooking)\", \"originalString\": \"1 1/2 cups regular oats (not quick-cooking)\", \"originalName\": \"regular oats (not quick-cooking)\", \"metaInformation\": [ \"(not quick-cooking)\" ], \"meta\": [ \"(not quick-cooking)\" ], \"image\": \"https://spoonacular.com/cdn/ingredients_100x100/rolled-oats.jpg\" } ], \"usedIngredients\": [ { \"id\": 1089003, \"amount\": 4, \"unit\": \"cups\", \"unitLong\": \"cups\", \"unitShort\": \"cup\", \"aisle\": \"Produce\", \"name\": \"granny smith apples\", \"original\": \"4 cups Granny Smith apples, chopped into ½ inch chunks\", \"originalString\": \"4 cups Granny Smith apples, chopped into ½ inch chunks\", \"originalName\": \"Granny Smith apples, chopped into ½ inch chunks\", \"metaInformation\": [ \"chopped\" ], \"meta\": [ \"chopped\" ], \"image\": \"https://spoonacular.com/cdn/ingredients_100x100/grannysmith-apple.png\" } ], \"unusedIngredients\": [], \"likes\": 11 }, { \"id\": 641803, \"title\": \"Easy & Delish! ~ Apple Crumble\", \"image\": \"https://spoonacular.com/recipeImages/641803-312x231.jpg\", \"imageType\": \"jpg\", \"usedIngredientCount\": 1, \"missedIngredientCount\": 3, \"missedIngredients\": [ { \"id\": 1001, \"amount\": 0.75, \"unit\": \"stick\", \"unitLong\": \"sticks\", \"unitShort\": \"stick\", \"aisle\": \"Milk, Eggs, Other Dairy\", \"name\": \"butter\", \"original\": \"3/4 stick of butter\", \"originalString\": \"3/4 stick of butter\", \"originalName\": \"butter\", \"metaInformation\": [], \"meta\": [], \"image\": \"https://spoonacular.com/cdn/ingredients_100x100/butter-sliced.jpg\" }, { \"id\": 2011, \"amount\": 1, \"unit\": \"Dash\", \"unitLong\": \"Dash\", \"unitShort\": \"Dash\", \"aisle\": \"Spices and Seasonings\", \"name\": \"cloves ground\", \"original\": \"Dash of ground cloves\", \"originalString\": \"Dash of ground cloves\", \"originalName\": \"ground cloves\", \"metaInformation\": [], \"meta\": [], \"image\": \"https://spoonacular.com/cdn/ingredients_100x100/cloves.jpg\" }, { \"id\": 9156, \"amount\": 1, \"unit\": \"\", \"unitLong\": \"\", \"unitShort\": \"\", \"aisle\": \"Produce\", \"name\": \"lemon zest\", \"original\": \"1 Zest of lemon\", \"originalString\": \"1 Zest of lemon\", \"originalName\": \"Zest of lemon\", \"metaInformation\": [], \"meta\": [], \"image\": \"https://spoonacular.com/cdn/ingredients_100x100/zest-lemon.jpg\" } ], \"usedIngredients\": [ { \"id\": 9003, \"amount\": 3, \"unit\": \"\", \"unitLong\": \"\", \"unitShort\": \"\", \"aisle\": \"Produce\", \"name\": \"apples\", \"original\": \"3 apples – sliced\", \"originalString\": \"3 apples – sliced\", \"originalName\": \"apples – sliced\", \"metaInformation\": [ \"sliced\" ], \"meta\": [ \"sliced\" ], \"image\": \"https://spoonacular.com/cdn/ingredients_100x100/apple.jpg\" } ], \"unusedIngredients\": [], \"likes\": 1 } ]\n    })\n\n    function getRecipes(query) {\n      state.query = query;\n      console.log(state.query);\n        // Simple GET request using fetch\n      // fetch(\"https://api.spoonacular.com/recipes/findByIngredients?ingredients=apples,+flour,+sugar&number=2&apiKey=\"+state.api_key)\n      //   .then(response => response.json())\n      //   .then(data => (state.recipes = data));\n\n      // Return dummy data\n      state.recipes = state.testData;\n    }\n\n\n    return {\n      state,\n      getRecipes\n    }\n  }\n};\n</script>\n"]}]}